import { MemberRolesEnum } from '@/lib/auth/auth-permissions';

// Mock for server-only package in tests
export {};

export const mockSession = {
  user: {
    id: 'user-123',
    name: 'Alice Example',
    email: 'alice@example.com',
    emailVerified: true,
    image: 'https://example.com/avatar.png',
    createdAt: new Date('2023-01-01T12:00:00Z'),
    updatedAt: new Date('2023-06-01T12:00:00Z'),
    role: 'admin',
    banned: false,
    banReason: null,
    banExpires: null,
    username: 'alice123',
    firstName: 'Alice',
    lastName: 'Example',
    phone: 1234567.0001,
    foodsharingId: 98765.4321,
    secure: true,
    isFirstLogin: false,
    isAnonymous: false,
  },
  session: {
    id: 'sess-abc123',
    expiresAt: new Date('2023-12-31T23:59:59Z'),
    token: 'token-abc123xyz',
    createdAt: new Date('2023-06-01T12:00:00Z'),
    updatedAt: new Date('2023-06-01T12:30:00Z'),
    ipAddress: '192.168.0.1',
    userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)',
    userId: 'user-123',
    impersonatedBy: null,
    activeOrganizationId: 'fairteiler-123',
  },
};

export const mockMembership = {
  id: 'member-123',
  user: {
    id: 'user-123',
    name: 'Test User',
    email: 'test@example.com',
    image: 'https://example.com/avatar.jpg',
  },
  role: MemberRolesEnum.OWNER,
  userId: 'user-123',
  organizationId: 'fairteiler-123',
  createdAt: new Date(),
};

export const mockFairteiler = {
  id: 'fairteiler-123',
  name: 'Test Fairteiler',
  slug: 'test-fairteiler',
  thumbnail: 'https://example.com/old-thumbnail.jpg',
  logo: null,
  address: 'Test Address',
  geoLink: null,
  geoLat: '48.000',
  geoLng: '9.000',
  website: null,
  disabled: false,
  tags: [],
  createdAt: new Date(),
  metadata: null,
  members: [
    {
      id: 'member-123',
      createdAt: new Date(),
      organizationId: 'fairteiler-123',
      role: MemberRolesEnum.MEMBER,
      userId: 'user-123',
      user: {
        id: 'user-123',
        name: 'Existing User',
        email: 'existing@example.com',
        emailVerified: true,
        image: null,
        createdAt: new Date(),
        updatedAt: new Date(),
        role: null,
        banned: null,
        banReason: null,
        banExpires: null,
        username: null,
        firstName: 'Existing',
        lastName: 'User',
        phone: null,
        foodsharingId: null,
        secure: true,
        isFirstLogin: false,
        isAnonymous: false,
      },
    },
    {
      id: 'member-234',
      createdAt: new Date(),
      organizationId: 'fairteiler-123',
      role: MemberRolesEnum.EMPLOYEE,
      userId: 'user-234',
      user: {
        id: 'user-234',
        name: 'Employee 1',
        email: 'employee-1@test-fairteiler.local',
        emailVerified: true,
        image: null,
        createdAt: new Date(),
        updatedAt: new Date(),
        role: null,
        banned: null,
        banReason: null,
        banExpires: null,
        username: null,
        firstName: 'Employee',
        lastName: '1',
        phone: null,
        foodsharingId: null,
        secure: true,
        isFirstLogin: false,
        isAnonymous: false,
      },
    },
  ],
};

export const mockOrigins = [
  {
    id: 'origin-123',
    name: 'Test Origin',
    description: 'Origin description',
    image: null,
    status: 'active' as 'active' | 'pending' | 'disabled',
    createdAt: new Date(),
  },
  {
    id: 'origin-234',
    name: 'Test Origin 2',
    description: 'Origin description 2',
    image: null,
    status: 'disabled' as 'active' | 'pending' | 'disabled',
    createdAt: new Date(),
  },
];

export const mockCategories = [
  {
    id: 'category-123',
    name: 'Test Category',
    description: 'Category description',
    image: null,
    status: 'active' as 'active' | 'pending' | 'disabled',
    createdAt: new Date(),
  },
  {
    id: 'category-234',
    name: 'Test Category',
    description: 'Category description',
    image: null,
    status: 'disabled' as 'active' | 'pending' | 'disabled',
    createdAt: new Date(),
  },
];

export const mockCompanies = [
  {
    id: 'company-123',
    name: 'Test Company',
    description: 'Company description',
    image: null,
    status: 'active' as 'active' | 'pending' | 'disabled',
    attachment: null,
    originId: 'origin-123',
    createdAt: new Date(),
  },
  {
    id: 'company-234',
    name: 'Test Company',
    description: 'Company description',
    image: null,
    status: 'disabled' as 'active' | 'pending' | 'disabled',
    attachment: null,
    originId: 'origin-234',
    createdAt: new Date(),
  },
];

export const mockCheckins = [
  {
    id: 'checkin-001',
    userId: 'user-123',
    fairteilerId: 'fairteiler-456',
    foodId: 'food-789',
    quantity: 2.0,
    shelfLife: new Date('2023-09-15T12:00:00Z'),
    createdAt: new Date('2023-09-01T09:30:00Z'),
    food: {
      id: 'food-123',
      title: 'Fresh Apples',
      originId: 'origin-001',
      categoryId: 'cat-001',
      companyId: 'comp-001',
      company: 'Local Farm',
      cool: false,
      allergens: null,
      comment: 'Organic apples freshly picked this morning',
      createdAt: new Date('2023-09-01T09:00:00Z'),
      category: {
        id: 'cat-001',
        name: 'Fruits',
        description: 'Fresh fruits of all kinds',
        image: 'https://example.com/images/fruits.png',
        status: 'active' as 'active' | 'pending' | 'disabled',
        createdAt: new Date('2023-01-01T00:00:00Z'),
      },
    },
  },
  {
    id: 'checkin-002',
    userId: 'user-123',
    fairteilerId: 'fairteiler-456',
    foodId: 'food-123',
    quantity: 5.0,
    shelfLife: new Date('2023-09-15T12:00:00Z'),
    createdAt: new Date('2023-09-01T09:30:00Z'),
    food: {
      id: 'food-234',
      title: 'Fresh Bananas',
      originId: 'origin-001',
      categoryId: 'cat-001',
      companyId: 'comp-001',
      company: 'Local Farm',
      cool: false,
      allergens: null,
      comment: 'Organic apples freshly picked this morning',
      createdAt: new Date('2023-09-01T09:00:00Z'),
      category: {
        id: 'cat-001',
        name: 'Fruits',
        description: 'Fresh fruits of all kinds',
        image: 'https://example.com/images/fruits.png',
        status: 'active' as 'active' | 'pending' | 'disabled',
        createdAt: new Date('2023-01-01T00:00:00Z'),
      },
    },
  },
];

export const mockContributions = {
  data: [
    {
      checkinId: 'checkin-001',
      contributionDate: new Date('2023-09-01T09:30:00Z'),
      quantity: 5.0,
      shelfLife: new Date('2023-09-15T12:00:00Z'),
      foodTitle: 'Fresh Apples',
      foodCompany: 'Local Farm',
      foodCool: false,
      foodAllergens: null,
      foodComment: 'Organic apples freshly picked this morning',
      categoryName: 'Fruits',
      categoryImage: 'https://example.com/images/fruits.png',
      originName: 'Farm Harvest',
      companyName: 'Local Farm',
      contributorId: 'user-123',
      contributorName: 'Alice Example',
      contributorEmail: 'alice@example.com',
      contributorImage: 'https://example.com/avatar.png',
      contributorIsAnonymous: false,
      fairteilerId: 'fairteiler-456',
      fairteilerName: 'Community Fridge Berlin',
    },
    {
      checkinId: 'checkin-002',
      contributionDate: new Date('2023-09-01T10:00:00Z'),
      quantity: 2.0,
      shelfLife: new Date('2023-09-10T12:00:00Z'),
      foodTitle: 'Wholegrain Bread',
      foodCompany: 'Berlin Bakery',
      foodCool: false,
      foodAllergens: 'gluten',
      foodComment: 'Still fresh, baked yesterday',
      categoryName: 'Bakery',
      categoryImage: 'https://example.com/images/bakery.png',
      originName: 'Local Bakery',
      companyName: 'Berlin Bakery',
      contributorId: 'user-456',
      contributorName: 'Bob Example',
      contributorEmail: 'bob@example.com',
      contributorImage: 'https://example.com/avatar2.png',
      contributorIsAnonymous: false,
      fairteilerId: 'fairteiler-456',
      fairteilerName: 'Community Fridge Berlin',
    },
  ],
  total: 2,
};

export const mockContributionVersionHistory = [
  {
    id: 'vh-001',
    checkinId: 'checkin-001',
    fairteilerId: 'fairteiler-456',
    userId: 'user-123',
    user: {
      id: 'user-123',
      name: 'Alice Example',
      email: 'alice@example.com',
      emailVerified: true,
      image: 'https://example.com/avatar.png',
      createdAt: new Date('2023-01-01T12:00:00Z'),
      updatedAt: new Date('2023-06-01T12:00:00Z'),
      role: 'admin',
      banned: false,
      banReason: null,
      banExpires: null,
      username: 'alice123',
      firstName: 'Alice',
      lastName: 'Example',
      phone: '1234567.0001',
      foodsharingId: '98765.4321',
      secure: true,
      isFirstLogin: false,
      isAnonymous: false,
    },
    field: 'quantity',
    prevValue: '5',
    newValue: '10',
    createdAt: new Date('2023-09-02T08:00:00Z'),
  },
  {
    id: 'vh-002',
    checkinId: 'checkin-001',
    fairteilerId: 'fairteiler-456',
    userId: 'user-123',
    user: {
      id: 'user-123',
      name: 'Alice Example',
      email: 'alice@example.com',
      emailVerified: true,
      image: 'https://example.com/avatar.png',
      createdAt: new Date('2023-01-01T12:00:00Z'),
      updatedAt: new Date('2023-06-01T12:00:00Z'),
      role: 'admin',
      banned: false,
      banReason: null,
      banExpires: null,
      username: 'alice123',
      firstName: 'Alice',
      lastName: 'Example',
      phone: '1234567.0001',
      foodsharingId: '98765.4321',
      secure: true,
      isFirstLogin: false,
      isAnonymous: false,
    },
    field: 'foodComment',
    prevValue: 'Organic apples freshly picked this morning',
    newValue: 'Organic apples, ready for sharing',
    createdAt: new Date('2023-09-02T08:30:00Z'),
  },
  {
    id: 'vh-003',
    checkinId: 'checkin-002',
    fairteilerId: 'fairteiler-456',
    userId: 'user-234',
    user: {
      id: 'user-234',
      name: 'Tom Example',
      email: 'tom@example.com',
      emailVerified: true,
      image: 'https://example.com/avatar.png',
      createdAt: new Date('2023-01-01T12:00:00Z'),
      updatedAt: new Date('2023-06-01T12:00:00Z'),
      role: 'admin',
      banned: false,
      banReason: null,
      banExpires: null,
      username: 'tom123',
      firstName: 'Tom',
      lastName: 'Example',
      phone: '1234567.0001',
      foodsharingId: '98765.4321',
      secure: true,
      isFirstLogin: false,
      isAnonymous: false,
    },
    field: 'shelfLife',
    prevValue: '2023-09-10T12:00:00Z',
    newValue: '2023-09-12T12:00:00Z',
    createdAt: new Date('2023-09-02T09:00:00Z'),
  },
];
